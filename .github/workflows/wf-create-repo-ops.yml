name: Create Repository on Issue creation via inline scripts

on:
  issues:
    types:
      - opened

permissions:
  issues: write

jobs:

  # 1. Extract repository settings from issue body
  extract_repository_settings:
    
    if: contains(github.event.issue.labels.*.name, 'repo-ops')

    uses: ./.github/workflows/rwf-extract-repository-settings.yml
    with: 
      issue_body: ${{ github.event.issue.body }}

  # 2. Create repository
  create_repository:
    needs: extract_repository_settings
    if: needs.extract_repository_settings.outputs.repository_name != ''

    runs-on: ubuntu-latest

    steps:

      - name: Rename issue
        uses: actions/github-script@v6.3.3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.update({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: "New repository request: ${{ steps.extract_repository_settings.outputs.repository_name }}"
            })

      # Create repository
      - name: Create repository
        id: create_repository
        uses: actions/github-script@v6.3.3
        with:
          github-token: ${{ secrets.REPO_OPS_TOKEN }}
          script: |
            github.rest.repos.createInOrg({
              org: context.repo.owner,
              name: '${{ needs.extract_repository_settings.outputs.repository_name }}',
              visibility: '${{ needs.extract_repository_settings.outputs.repository_visibility }}',
            }).then(({ data }) => {
                core.setOutput("repo_full_name", data.full_name);
                core.setOutput("repo_url", data.html_url);
                core.setOutput("repo_id", data.id);
                core.setOutput("status", "success");
            }
            ).catch((error) => {
                core.setOutput("status", "failure");
                core.setOutput("error", error.response.data.message);
            }
            );

      # Add comment if repository was created
      - name: Add comment
        if: contains(steps.create_repository.outputs.status, 'success')
        uses: actions/github-script@v6.3.3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "✅ Repository [${{ steps.create_repository.outputs.repo_full_name }}](${{ steps.create_repository.outputs.repo_url }}) created"
            })

      # Close issue if repository was created
      - name: Close issue
        if: contains(steps.create_repository.outputs.status, 'success')
        uses: actions/github-script@v6.3.3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.update({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'closed'
            })

      # Add comment if repository was not created
      - name: Add comment
        if: contains(steps.create_repository.outputs.status, 'failure')
        uses: actions/github-script@v6.3.3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "❌ Repository could not be created: ${{ steps.create_repository.outputs.error }}"
            })
